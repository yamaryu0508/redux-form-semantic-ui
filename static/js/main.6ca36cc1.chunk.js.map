{"version":3,"sources":["Validations.js","Store.js","showResults.js","SemanticFields.jsx","ValidationForm.jsx","index.jsx"],"names":["max","min","reducer","combineReducers","form","reduxFormReducer","store","window","devToolsExtension","createStore","sleep","ms","Promise","resolve","setTimeout","src_showResults","_showResults","Object","asyncToGenerator","regenerator_default","a","mark","_callee","values","wrap","_context","prev","next","alert","concat","JSON","stringify","stop","this","_x","apply","arguments","renderText","_ref","input","label","type","placeholder","_ref$meta","meta","touched","error","warning","props","objectWithoutProperties","react_default","createElement","Form","Field","Input","assign","style","color","required","value","undefined","maxLength15","length","number","isNaN","Number","minValue13","minValue","email","test","tooYoung","aol","reduxForm","handleSubmit","pristine","reset","submitting","name","component","validate","warn","Group","Button","icon","labelPosition","content","onClick","disabled","rootEl","document","getElementById","ReactDOM","render","es","padding","src_ValidationForm","onSubmit","showResults"],"mappings":"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","file":"static/js/main.6ca36cc1.chunk.js","sourcesContent":["export const required = value =>\n  value || typeof value === \"number\" ? undefined : \"Required\";\n\nexport const maxLength = max => value =>\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\n\nexport const maxLength15 = maxLength(15);\n\nexport const minLength = min => value =>\n  value && value.length < min ? `Must be ${min} characters or more` : undefined;\n\nexport const minLength2 = minLength(2);\n\nexport const number = value =>\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\n\nexport const minValue = min => value =>\n  value && value < min ? `Must be at least ${min}` : undefined;\n\nexport const minValue13 = minValue(13);\n\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? \"Invalid email address\"\n    : undefined;\n\nexport const tooYoung = value =>\n  value && value < 13\n    ? \"You do not meet the minimum age requirement!\"\n    : undefined;\nexport const aol = value =>\n  value && /.+@aol\\.com/.test(value)\n    ? \"Really? You still use AOL for your email?\"\n    : undefined;\nexport const alphaNumeric = value =>\n  value && /[^a-zA-Z0-9 ]/i.test(value)\n    ? \"Only alphanumeric characters\"\n    : undefined;\n\nexport const phoneNumber = value =>\n  value && !/^(0|[1-9][0-9]{9})$/i.test(value)\n    ? \"Invalid phone number, must be 10 digits\"\n    : undefined;\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer,\n});\nconst store = (window.devToolsExtension\n  ? window.devToolsExtension()(createStore)\n  : createStore)(reducer);\n\nexport default store;","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default (async function showResults(values) {\n  await sleep(500); // simulate server latency\n  window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n});","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\nexport const renderText = ({\n  input,\n  type,\n  label,\n  placeholder,\n  meta: { touched, error, warning },\n  ...props\n}) => (\n  <Form.Field>\n    <Form.Input\n      {...input}\n      {...props}\n      error={touched && error && true}\n      label={label}\n      placeholder={placeholder}\n    />\n    <Form.Field>\n      {touched &&\n        ((error && <i style={{ color: \"#9f3a38\" }}>{error}</i>) ||\n          (warning && <i style={{ color: \"#9f3a38\" }}>{warning}</i>))}\n    </Form.Field>\n  </Form.Field>\n);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nimport { renderText } from \"./SemanticFields\";\nimport {\n  required,\n  maxLength15,\n  email,\n  aol,\n  number,\n  minValue13,\n  tooYoung\n} from \"./Validations\";\n\nconst ValidationForm = props => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <Form>\n      <Field\n        required\n        name=\"username\"\n        type=\"text\"\n        component={renderText}\n        label=\"Username\"\n        validate={[required, maxLength15]}\n      />\n      <Field\n        name=\"email\"\n        type=\"email\"\n        component={renderText}\n        label=\"Email\"\n        validate={email}\n        warn={aol}\n      />\n      <Field\n        required\n        name=\"age\"\n        type=\"number\"\n        component={renderText}\n        label=\"Age\"\n        validate={[required, number, minValue13]}\n        warn={tooYoung}\n      />\n      <Form.Group>\n        <Button\n          color=\"blue\"\n          icon=\"checkmark\"\n          labelPosition=\"right\"\n          content=\"Submit\"\n          onClick={handleSubmit}\n          disabled={submitting}\n        />\n        <Button\n          content=\"Clear Values\"\n          onClick={reset}\n          disabled={pristine || submitting}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default reduxForm({\n  form: \"form\"\n})(ValidationForm);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport showResults from \"./showResults\";\nimport ValidationForm from \"./ValidationForm\";\n\nconst rootEl = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <div style={{ padding: 15 }}>\n      <h2>Validation Form with Redux Form & Semantic UI</h2>\n      <ValidationForm onSubmit={showResults} />\n    </div>\n  </Provider>,\n  rootEl\n);\n"],"sourceRoot":""}